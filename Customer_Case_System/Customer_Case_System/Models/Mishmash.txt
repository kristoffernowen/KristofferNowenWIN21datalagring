 public void DeleteAddress(int id)
        
        {
            var item = _sqlContext.Addresses.Find(id);
            if (item != null && item.Id == id)
            {
                _sqlContext.Remove(item);
                _sqlContext.SaveChanges();
            }
        }




        public void UpdateAddress(int id, Address address)
        {
            var addressToBeUpdated = _sqlContext.Addresses.Find(id);
            if (addressToBeUpdated != null && addressToBeUpdated.Id == id)
            {
                addressToBeUpdated.StreetName = address.StreetName;
                addressToBeUpdated.PostalCode = address.PostalCode;
                addressToBeUpdated.City = address.City;
                addressToBeUpdated.Country = address.Country;

                _sqlContext.Update(addressToBeUpdated);
                _sqlContext.SaveChanges();
            }
        }




        public void RegisterCustomer(string firstName, string lastName, int addressId)
        {
            _sqlContext.Customers.Add(new Customer {FirstName = firstName, LastName = lastName, AddressId = addressId});
            _sqlContext.SaveChanges();
        }




         public List<CustomerWithContact> GetCustomersWithContact() =>
            _sqlContext.Customers.Join(
                _sqlContext.ContactInfos, // joina med
                customer => customer.Id, // ida rad
                contactInfo => contactInfo.CustomerId, // identify rad
                (customer, contactInfo) => new CustomerWithContact { FirstName = customer.FirstName, Email = contactInfo.Email }
            ).ToList();





        public void InitializeStatusOfCase()
        {
            var statusUnprocessedCase = new StatusOfCase {StatusOfCase1 = "Unprocessed"};
            var statusBeingProcessedCase = new StatusOfCase {StatusOfCase1 = "Being processed"};
            var statusClosedCase = new StatusOfCase {StatusOfCase1 = "Closed"};

            var unprocessedExists = _sqlContext.StatusOfCases
                .Where(x => x.StatusOfCase1 == statusUnprocessedCase.StatusOfCase1).SingleOrDefault();
            var beingProcessedExists = _sqlContext.StatusOfCases
                .Where(x => x.StatusOfCase1 == statusBeingProcessedCase.StatusOfCase1).SingleOrDefault();
            var closedExists = _sqlContext.StatusOfCases.Where(x => x.StatusOfCase1 == statusClosedCase.StatusOfCase1)
                .SingleOrDefault();
            if (unprocessedExists == null && beingProcessedExists == null && closedExists == null)
            {
                _sqlContext.StatusOfCases.AddRange(statusUnprocessedCase, statusBeingProcessedCase, statusClosedCase);
                _sqlContext.SaveChanges();
                
            }
        }